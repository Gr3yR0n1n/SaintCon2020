b main
b _startup
b _start
info file
r
unlock
call unlock
quit
b _start
r
call unlock
n
c
b unlock
r
c
call unlock
n
n
call unlock
jmp unlock
disas unlock
back
jmp 0x00000000004000f3
jmpcall 0x00000000004000f3
quit
b _start
r
call unlock
call 0x4000f3
n
call unlock
i
s
s
info file
disas
quit
b _start
call unlock
r
info file
quit
call _unlock
call unlock
b _start
r
set RSP 0x4000f3
set RIP 0x4000f3
set $RIP 0x4000f3
set $pc 0x4000f3
set $rip = 0x4000f3
n
n
c
info file
quit
b _start
r
call unlock
set $RIP = 0x4000f3
c
set $RIP = 0x4000f3
n
set $RIP = 0x4000f3
s
set $RIP = 0x4000f3
call unlock
i
s
set $RIP = 0x4000f3
s
s
set $RIP = 0x4000f3
x/i $RIP
s
c
quit
b _start
r
call unlock
set $RIP = 0x4000f3
s
set $PC = 0x4000f3
s
set $RIP 0x4000b0
set $RIP = 0x4000b0
s
n
set $RIP = 0x4000f3
s
p $RIP
set $RSP = 0x4000f3
s
p $RSP
p $RIP
set RIP = 0x4000f3
set $EIP = 0x4000f3
s
set $IP = 0x4000f3
s
s
s
n
set $RIP = 0x4000f3
set $RIP = unlock
p $RIP
s
s
set $pc = unlock
set $RIP = unlock 
set $RSP = unlock
i registers
s
c
r
set $RIP = 0x4000f3
i registers
set $rip = 0x4000f3
i registers
s
c
quit
quit
b _start
r
call unlock
set $rip = 0x4000f3
n
c
quit
b parse
r
quit
b parse
r
p input
p/resb input
p/string input
p/20x input
p(string) input
file
info file
disas parse
disas _start
n
p(char(255)) input
p(string) input
quit
b parse
r
file vault.dmp
p(string) input
quit
b parse
r
p(string) input
file vault.dmp
p(string) input
p input
print input
disas 
ls
quit
